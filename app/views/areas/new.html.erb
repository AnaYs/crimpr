<div class="container">
  <div class="row row-centered">
    <div class="col-xs-6 col-centered col-min">

      <h2>Add a new climbing area</h2>

      <%= simple_form_for(@area) do |f| %>
        <%= f.error_notification %>

        <div class="form-inputs">
          <%= f.input :name, required: true, autofocus: true %>
          <%= f.input :description, required: true, hint: ("Give a brief description of the type of climbing in this area") %>
          <%= f.input :location, required: true %>
          <%= f.input :latitude, required: true %>
          <%= f.input :longitude, required: true %>
        </div>

        <div id="geolocation" style="width: 100%; height: 600px;"></div>

        <br>
        <div class="form-actions">
          <%= f.button :submit, "Add" %>
        </div>
      <% end %>
  </div>
  </div>
</div>

<% content_for(:after_js) do %>
  <%= javascript_tag do %>
    $(document).on('ready', function() {
      var marker = "";
      var user_input = "";
      var geocoder = new google.maps.Geocoder();
      var mapOptions = {
        mapTypeId: google.maps.MapTypeId.SATELLITE
      };
      var handler = Gmaps.build('Google');

<!-- build map and display current position on map -->
      handler.buildMap({
        provider: mapOptions,
        internal: {
          id: 'geolocation'
        }
      }, function() {
        if (navigator.geolocation)
          navigator.geolocation.getCurrentPosition(displayOnMap);
      });

      function displayOnMap(position) {
        marker = handler.addMarker({
          lat: position.coords.latitude,
          lng: position.coords.longitude
        }, {
          draggable: true
        });

        handler.map.centerOn(marker);

<!-- add event "handleDragEnd" on draggin of marker -->
        google.maps.event.addListener(marker.serviceObject, 'dragend', function() { handler.map.handleDragEnd(this.getPosition()) });
      };

<!-- function "handleDragEnd" fills coordinates of marker into form fields -->
      handler.map.handleDragEnd = function(position) {
        var latitude = position["A"];
        var longitude = position["F"];
        var geocoder = new google.maps.Geocoder();
          geocoder.geocode({
            latLng: position
          }, function(responses) {
        $("#area_location").val(responses[0].formatted_address)
        });

        $("#area_latitude").val(latitude);
        $("#area_longitude").val(longitude);
      };

<!-- changing coordinates based on user input -->

      $('#area_location').on("change", function() {
        user_input = $("#area_location").val();
            geocoder.geocode({ 'address': user_input},
              function(results, status) {
                if (status == google.maps.GeocoderStatus.OK) {
                  var latitude = results[0].geometry.location["A"];
                  var longitude = results[0].geometry.location["F"];
                  handler.removeMarker(marker);
                  marker = handler.addMarker({
                      lat: latitude,
                      lng: longitude
                  }, {
                    draggable: true
                  });
                  $("#area_latitude").val(latitude);
                  $("#area_longitude").val(longitude);
                  handler.map.centerOn(marker);

                  <!-- add event "handleDragEnd" on draggin of marker -->
                  google.maps.event.addListener(marker.serviceObject, 'dragend', function() { handler.map.handleDragEnd(this.getPosition()) });
                }
                else {
                  alert("Geocode was not successful for the following reason: " + status);
                }
              }
            );
      });

    });
  <% end %>
<% end %>
